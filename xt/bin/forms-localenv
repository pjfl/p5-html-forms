#!/usr/bin/env perl
# If you have a $LOCAL_LIB directory then this script will set it up for
# you as it executes

# If used like /usr/bin/env then it will run other commands based on
# your current path settings (with a local::lib environment if present)

# e.g. use FindBin qw( $Bin );
#    BEGIN { do catfile( $Bin, q(<appname>_localenv) ) or croak $EVAL_ERROR }

use lib;
use strict;
use warnings;

use Config;
use Cwd                   qw( abs_path );
use English               qw( -no_match_vars );
use File::Basename        qw( basename dirname );
use File::Spec::Functions qw( catdir catfile );

my $LOCAL_LIB  = 'local'; # This is the only configurable

sub extend {
   my ($k, $v, $sep) = @_;

   $sep //= $Config::Config{path_sep};

   return $ENV{ $k } = $v.($ENV{ $k } ? $sep.$ENV{ $k } : q());
}

sub untaint {
   my $v = shift;

   $v = $v =~ m{ \A ([^\$%&\*;<>\`|]+) \z }mx ? $1 : die "Path ${v} tainted";

   return $v;
}

my $was_called = caller() ? 1 : 0;
my $our_path   = $was_called ? (caller())[ 1 ] : $PROGRAM_NAME;
my $bindir     = untaint( abs_path( dirname( $our_path ) ) );
my $basedir    = dirname( $bindir );
my $libdir     = catdir( $basedir, 'lib' );
my $local_lib;

# The libdir can be inside local_lib or it's sibling
if (-d catdir( $libdir, 'perl5' )) { $local_lib = $basedir }
else { $local_lib = catdir( $basedir, $LOCAL_LIB ) }

if (-d $local_lib) {
   # So we can find local::lib when fully self contained
   lib->import( catdir( $local_lib, 'lib', 'perl5' ) );

   require local::lib;
   local::lib->import( $local_lib );

   my $localbin = catdir( $local_lib, 'bin' );

   extend( 'PATH', $localbin ) if -d $localbin and $localbin ne $bindir;
   extend( 'PERL5_MB_OPT', 'INSTALLMAN1DIR=none INSTALLMAN3DIR=none', q( ) );
}

extend( 'PATH', $bindir ) if -d $bindir;

if (-d $libdir) {
   extend( 'PERL5LIB', $libdir );
   lib->import( $libdir );
}

my $hfslib = catdir( dirname($basedir), 'lib' );

if (-d $hfslib) {
   extend( 'PERL5LIB', $hfslib );
   lib->import( $hfslib );
}

exec @ARGV if !$was_called && @ARGV;

1;
