@alert-max-width: 20rem;
@checkbox-height: 1.25rem;
@checkbox-knob-width: 20px;
@checkbox-width: 40px;
@error-max-width: 50rem;
@field-max-width: 40rem;
@field-min-width: 20rem;
@filemanager-min-width: 10rem;
@label-width: 7rem;
@select-max-width: 10rem;
@selector-min-width: 15rem;
@textarea-min-width: 15rem;
#colours() {
    button-bg: bisque;
    button-border: gainsboro;
    button-disabled-bg: gainsboro;
    button-hover: limegreen;
    button-lighter-bg: whitesmoke;
    button-text: black;
    checkbox-false-bg: firebrick;
    checkbox-true-bg: seagreen;
    close: firebrick;
    disabled: gray;
    ds-tile-bg: wheat;
    ds-tile-lighter-bg: whitesmoke;
    error-bg: lightpink;
    field-active: bisque;
    field-border: gainsboro;
    field-required: red;
    field-selected-bg: bisque;
    line: gray;
    link: seagreen;
    panel-bg: ivory;
    panel-shadow: gray;
    text: black;
}
#fonts() {
    code: ui-monospace, 'Cascadia Code', Menlo, 'DejaVu Sans Mono', monospace;
    cursive: 'Segoe Print', 'Bradley Hand', Chilanka, casual, cursive;
    data: 'Roboto Slab', 'DejaVu Serif', 'Sitka Small', serif;
    mono: 'Nimbus Mono PS', 'Courier New', monospace;
    system: Roboto, system-ui, sans-serif;
}
#grads() {
    button-bg: linear-gradient(
        0deg, #colours[button-bg], #colours[button-lighter-bg]
    );
    button-border-bg: radial-gradient(
        #colours[button-hover], transparent, transparent
    );
    button-disabled-bg: linear-gradient(
        0deg, #colours[button-disabled-bg], #colours[button-lighter-bg]
    );
    error-fade: linear-gradient(
        to right, transparent, #colours[error-bg] 80%
    );
}
form.classic {
    background: #colours[panel-bg]; border-radius: 5px;
    box-shadow: 3px 3px 3px; color: #colours[line]; display: inline-block;
    padding-bottom: 0.25rem; position: relative;
    div {
        color: #colours[text];
    }
    .alert {
        font-family: #fonts[system]; font-size: 0.8rem;
    }
    .form-page.hide {
        display: none;
    }
    .form-wrapper {
        border-radius: 5px; padding: 0 1rem; position: relative;
        .form-title {
            color: #colours[text]; font-family: #fonts[system];
            margin-left: -2px;
        }
    }
    .form-wrapper.wide .input-field {
        input, select, textarea, .alert {
            max-width: @field-max-width;
        }
    }
    .form-wrapper:has(.input-field span.field-label) .input-button button {
        margin-top: 1rem;
    }
    .input-field:has(label.field-label) {
        align-items: flex-start; column-gap: 0.5rem; display: grid;
        grid-template-columns: @label-width min-content auto;
        grid-template-areas: "label input selector" "label alert alert";
        justify-items: start; min-width: @field-min-width;
        row-gap: 0.25rem;
    }
    .input-field.label-right:has(label.field-label) {
        grid-template-columns: min-content auto @label-width;
        grid-template-areas: "selector input label" "alert alert label";
        input, select, span, textarea {
            justify-self: end;
        }
    }
    .input-field:has(span.digit-input-wrapper) .field-label::after,
    .input-field:has(input[required=required]) .field-label::after,
    .input-field:has(select[required=required]) .field-label::after,
    .input-field:has(textarea[required=required]) .field-label::after {
        color: #colours[field-required]; content: '*'; min-width: 2ch;
        padding-left: 0.25rem;
    }
    .input-field:has(span.digit-input-wrapper > input:valid) .field-label::after,
    .input-field:has(input:valid) .field-label::after,
    .input-field:has(select:valid) .field-label::after,
    .input-field:has(textarea:valid) .field-label::after {
        content: 'â€ˆ';
    }
    .input-field:has(input:focus) span.field-label {
        background: #colours[field-selected-bg];
        border: 2px inset #colours[field-border];
        border-bottom: 2px solid #colours[field-selected-bg];
        border-top-left-radius: 5px; border-top-right-radius: 5px;
    }
    .input-field:hover span.field-label,
    .input-field:has(input:focus) span.field-label,
    .input-field:has(input:valid) span.field-label {
        top: -3px;
    }
    .input-field:has(span.field-label) {
        input {
            height: 1.75rem; max-width: unset; outline: 0;
        }
        input[type=password], input[type=text]:not(.digit) {
            border-radius: 50px; padding-left: 0.75rem;
        }
        input.digit:first-child {
            border-bottom-left-radius: 50px; border-top-left-radius: 50px;
        }
        input.digit:last-child {
            border-bottom-right-radius: 50px; border-top-right-radius: 50px;
        }
    }
    .input-field:has(span.field-label)::before {
        content: ''; display: block; height: 22px;
    }
    .input-field {
        padding-bottom: 0.5rem; position: relative;
        input, select, textarea {
            border-radius: 5px; font-size: 0.85rem; font-family: #fonts[data];
            grid-area: input;
        }
        input {
            height: 1.5rem; max-width: @field-max-width;
        }
        select {
            background: #grads[button-bg]; max-width: @select-max-width;
        }
        span.field-label {
            border: 2px solid transparent; left: 0.5rem; padding: 2px 0.25rem;
            position: absolute; top: 22px; transition: top 0.5s;
        }
        textarea {
            box-sizing: content-box; max-width: @field-max-width;
            min-height: 3lh; min-width: @textarea-min-width; overflow: auto;
            padding-left: 0.25rem;
        }
        input:focus, textarea:focus {
            background: #colours[field-active];
        }
        input[type=date], input[type=email], input[type=password],
        input[type=text], select.select-multiple option {
            padding: 0 0.25rem;
        }
        input[readonly=readonly] {
            color: #colours[disabled];
        }
        input[readonly=readonly][type=datetime-local] {
            background: #colours[panel-bg]; border: 0; color: #colours[text];
        }
        input[type=submit] {
            font-family: #fonts[system]; font-size: 0.8rem;
        }
        select.select-multiple option {
            min-width: 8rem;
        }
        select.select-multiple option[selected=selected] {
            background: #colours[field-selected-bg];
        }
        .alert {
            border-radius: 5px; display: block; font-size: 0.8rem;
            grid-area: alert; max-width: @alert-max-width; padding: 0.5rem;
        }
        .alert-error {
            background: #colours[error-bg];
        }
        .alert-info {
            background: #colours[field-selected-bg];
        }
        .field-label {
            font-family: #fonts[system]; font-size: 0.8rem; grid-area: label;
            padding-top: 0.2rem; position: relative; white-space: nowrap;
            .label-sep-after {
                position: absolute; right: 0.25rem;
            }
        }
        .input-hidden {
            .alert {
                max-width: 100%;
            }
        }
    }
    .input-field.inline {
        display: inline-grid !important; margin-right: 0.5rem;
    }
    .input-field.hide {
        display: none !important; opacity: 0;
    }
    .input-boolean {
        .checkbox-wrapper {
            display: flex; grid-area: input; isolation: isolate;
            padding-top: 0.2rem; position: relative;
            input[type=checkbox] {
                height: @checkbox-height; margin: 0; opacity: 0;
                position: relative; width: @checkbox-width; z-index: 3;
            }
        }
        .checkbox-wrapper::after {
            background: #grads[button-bg];
            border: 2px inset #colours[button-border]; border-radius: 10px;
            content: ''; display: block; position: absolute;
            height: @checkbox-height; left: 0; top: 3px;
            width: @checkbox-knob-width; z-index: 2;
        }
        .checkbox-wrapper:has(input[type=checkbox]:checked)::after {
            left: @checkbox-knob-width;
        }
        .checkbox-wrapper::before {
            background: #colours[checkbox-false-bg];
            border: 2px inset #colours[button-border]; border-radius: 10px;
            content: ''; display: block; position: absolute;
            height: @checkbox-height; left: 0; width: @checkbox-width;
            z-index: 1;
        }
        .checkbox-wrapper:has(input[type=checkbox]:checked)::before {
            background: #colours[checkbox-true-bg];
        }
    }
    .data-structure, .input-button, .input-selector {
        isolation: isolate;
        button {
            background: #grads[button-bg];
            border: 2px outset #colours[button-border]; border-radius: 50px;
            color: #colours[link]; cursor: pointer; overflow: hidden;
            padding: 0.25rem 0.75rem; position: relative; transition: 0.5s;
            span, svg {
                font-size: 0.7rem; letter-spacing: 0.1rem; position: relative;
                text-decoration: none; text-transform: uppercase; z-index: 3;
            }
            span.icon-wrapper {
                display: block;
                svg {
                    vertical-align: top;
                }
            }
        }
        button:hover {
            border: 2px inset #colours[button-border];
            color: #colours[button-text];
        }
        button::before {
            background: #grads[button-border-bg]; content: ''; display: block;
            height: 3rem; left: var(--x); opacity: 0; position: absolute;
            top: var(--y); transform: translate(-50%, -50%);
            transition: opacity 0.5s; width: 3rem; z-index: 1;
        }
        button:hover::before {
            opacity: 1;
        }
        button::after {
            background: #grads[button-bg]; border-radius: 50px; content: '';
            inset: 3px; position: absolute; z-index: 2;
        }
        button[disabled=disabled], button[disabled=disabled]::after {
            background: #grads[button-disabled-bg];
        }
    }
    .input-button {
        align-items: center; display: flex; justify-content: right;
    }
    .input-button.expand button {
        flex: 2;
    }
    .input-button.inline {
        display: inline-flex;
    }
    .input-button.right {
        margin-right: 0; position: absolute; right: 0.5rem;
    }
    .input-button a.form-button {
        background: #grads[button-bg];
        border: 2px outset #colours[button-border]; border-radius: 50px;
        color: #colours[link]; cursor: pointer; display: inline-block;
        font-family: #fonts[system]; font-size: 0.7rem; letter-spacing: 0.1rem;
        line-height: 0.8rem; margin: 0.5rem 0; overflow: hidden;
        padding: 0.366rem 0.75rem; position: relative; text-decoration: none;
        text-transform: uppercase; transition: border 0.5s, color 0.5s;
    }
    .input-selector button {
        grid-area: selector;
    }
    .input-duration .input-select-integer, .input-interval .input-group,
    .input-repeatable div, .input-time-with-zone .input-group {
        display: inline-block;
    }
    .input-captcha input, .input-integer input, .input-interval input,
    .input-money input, .input-number input {
        line-height: 1.75rem; padding-left: 0.25rem; text-align: right;
    }
    .input-duration .option-label .label-sep-after,
    .input-duration .option-label .label-sep-before,
    .input-hidden:not(.input-error) {
        display: none;
    }
    .input-hidden.input-error {
        display: block; width: 100%;
        .alert-error {
            max-width: 13rem;
        }
    }
    .input-immutable {
        h1, h2, h3, h4, h5 {
            margin: 0 0 0.5rem 0;
        }
        p, pre code {
            font-size: 0.8rem; line-height: 1rem; max-width: 50rem;
        }
        pre code {
            display: inline-block; white-space: break-spaces;
        }
    }
    .input-integer {
        .digit {
            border-left: none; border-radius: 0; border-right: none;
            outline: 0; text-align: center; width: 2rem;
        }
        .digit:first-child {
            border-left: 2px inset #colours[button-border];
            border-bottom-left-radius: 5px; border-top-left-radius: 5px;
        }
        .digit:last-child {
            border-right: 2px inset #colours[button-border];
            border-bottom-right-radius: 5px; border-top-right-radius: 5px;
        }
    }
    .input-password .reveal {
        cursor: pointer; grid-area: selector;
    }
    .input-display span {
        font-size: 0.8rem; grid-area: input; padding: 0.2rem 0 0 0.35rem;
        white-space: nowrap;
    }
    .page-list {
        list-style-type: none; margin: 0; padding: 0 0 0.5rem 0;
        li {
            border-bottom: 1px solid #colours[line];
            border-top-left-radius: 5px; border-top-right-radius: 5px;
            cursor: pointer; display: inline;
            font-family: #fonts[system]; font-size: 0.8rem; padding: 0 0.5rem;
        }
        li.selected {
            border: 1px solid #colours[line];
            border-bottom: 1px solid transparent; color: #colours[text];
        }
    }
    .ds-add-icon {
        font-family: #fonts[system]; font-size: smaller; font-weight: bold;
        svg {
            vertical-align: middle;
        }
    }
    .ds-form {
        display: flex; flex-direction: column; padding-bottom: 0.5rem;
        position: relative; row-gap: 0.5rem;
        .ds-header {
            font-family: #fonts[system]; font-size: 0.8rem; font-weight: normal;
            padding-top: 0.2rem;
        }
        .ds-row {
            background: #colours[ds-tile-bg];
            border-radius: 5px; box-shadow: 3px 3px 3px #colours[line];
            display: flex; justify-content: space-between;
        }
        .ds-field {
            border-radius: 5px;
            border-bottom-right-radius: 0; border-top-right-radius: 0;
            display: flex; flex-direction: column;
            padding: 0.5rem 0 0.5rem 0.5rem;
            input[readonly=readonly] {
                background: #colours[ds-tile-bg] !important;
            }
        }
        .ds-field.hide {
            display: none;
        }
        .ds-field-group {
            display: flex;
        }
        .ds-field-group.vertical {
            flex-direction: column;
        }
        .ds-input.input-text[readonly=readonly] {
            background: #colours[panel-bg]; border: 0;
            border-radius: 0; color: #colours[text];
        }
        .ds-output {
            font-size: 0.8rem; margin-right: 0.25rem;
        }
        .ds-reorderable-drag {
            position: absolute;
        }
        .ds-reorderable {
            margin: auto; padding-left: 0.5rem;
            .knob {
                display: block; height: 20px; width: 20px;
            }
        }
        .ds-remove {
            border-radius: 5px;
            border-bottom-left-radius: 0; border-top-left-radius: 0;
            padding: 0.5rem;
            .ds-remove-icon {
                align-items: center; background: #grads[button-bg];
                border-radius: 3px;
                box-shadow: 2px 2px 2px #colours[panel-shadow];
                color: #colours[close]; cursor: pointer; display: flex;
                font-family: #fonts[system]; font-size: smaller;
                font-weight: bold; padding: 0 0.25rem;
                img, svg {
                    height: 20px; width: 20px; vertical-align: middle;
                }
            }
            .ds-remove-icon:hover {
                box-shadow: inset 0 0 3px #colours[panel-shadow];
                color: #colours[text];
            }
        }
        .ds-tag-label {
            font-family: #fonts[system]; font-size: 0.8rem;
            margin-right: 0.25rem;
        }
    }
}
form.classic.filemanager {
    padding: 0.5rem;
}
.modal .filemanager {
    margin: 0; min-width: @filemanager-min-width;
    .input-field:has(label.field-label) {
        grid-template-columns: auto max-content auto;
    }
}
.form-error {
    background: #colours[error-bg]; border: 1px solid #colours[line];
    border-radius: 5px; box-shadow: 3px 3px 3px #colours[panel-shadow];
    max-width: @error-max-width; overflow: hidden; padding: 0.5rem;
    h1, h2, h3 {
        margin: 0.5rem 0 !important;
    }
}
.form-messages {
    padding-bottom: 0.5rem;
    .alert {
        .card {
            font-family: #fonts[data]; margin-top: 0.25rem;
            max-width: @error-max-width; padding: 0 0.25rem;
            p {
                margin: 0; max-height: 6rem; overflow: hidden;
                position: relative;
            }
            p.long::after {
                background-image: #grads[error-fade];
                bottom: 0; content: ''; height: 1rem;
                position: absolute; right: 0; width: 100%;
            }
        }
    }
    .alert-error, .alert-error-message, .alert-severe .card {
        border-radius: 5px; background: #colours[error-bg]; padding: 0.25rem;
    }
    .alert-error-message {
        display: block; margin-left: -0.25rem;
    }
}
.selector form.classic {
    box-shadow: none; margin: 0; min-width: @selector-min-width;
}
